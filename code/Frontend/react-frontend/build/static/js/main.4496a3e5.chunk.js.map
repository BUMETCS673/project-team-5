{"version":3,"sources":["Media/GearOnTheGo.png","Media/TeamLeader.jpg","Media/SecurityLeader.jpg","Media/QALeader.png","Media/RequirementLeader.jpeg","Media/ConfigurationLeader.png","Media/ANDLeader.jpg","pages/index.js","Components/UserContext.js","Components/Navbar.js","pages/contact.js","pages/payment_validation.js","pages/payment_successful.js","pages/search.js","Components/AboutUs.js","pages/info.js","pages/MakeReservation.js","Components/GoogleLoginButton.js","pages/RegisterPage.js","pages/LoginPage.js","pages/ViewItem.js","pages/profile.js","Components/ProtectedRoute.js","Components/UserProfile.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Index","React","createElement","Outlet","UserContext","createContext","UserProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","userType","setUserType","Provider","value","useUser","useContext","NavbarCustom","props","_useUser","navigate","useNavigate","localStorage","getItem","JSON","parse","setLoginData","Navbar","collapseOnSelect","sticky","expand","style","backgroundColor","Container","Brand","fontSize","href","id","margin","color","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","title","Fragment","Item","onClick","removeItem","fetch","method","headers","then","response","status","console","log","error","data","catch","Contact","_React$useState","_React$useState2","firstName","setFirst","_React$useState3","_React$useState4","lastName","setLast","_React$useState5","_React$useState6","email","setEmail","_React$useState7","_React$useState8","subject","setSubject","_React$useState9","_React$useState10","msg","setMsg","_React$useState11","_React$useState12","submitMsg","setSubmitMsg","justifyContent","display","flexDirection","flexWrap","height","width","fontFamily","textAlign","position","marginTop","Form","onSubmit","e","preventDefault","setTimeout","FormGroup","Label","Control","type","placeholder","onChange","target","required","Text","as","rows","Button","variant","marginLeft","marginBottom","CheckoutForm","location","useLocation","state","reservationDetails","formData","price","Row","Col","md","alert","name","action","noValidate","fullName","document","getElementById","length","focus","streetAddress","zipCode","cvc","monthValid","monthValue","trim","test","_monthValue$split","split","_monthValue$split2","validMonth","validYear","currentDate","Date","currentMonth","String","getMonth","padStart","currentYear","getFullYear","slice","parseInt","cvcinput","message","cardNumberElement","cardNumber","cardDigits","map","Number","reverse","i","reduce","acc","val","validateForm","body","stringify","json","Group","cols","PaymentSuccessful","marginStyle","to","alignItems","minHeight","ItemSearchAndFilter","searchQuery","setSearchQuery","availabilityFilter","setAvailabilityFilter","_useState5","_useState6","results","setResults","_useState7","_useState8","showModal","setShowModal","_useState9","_useState10","selectedItem","setSelectedItem","_useState11","_useState12","priceRange","setPriceRange","_useState13","_useState14","setFilteredData","useEffect","fetchItems","endpoint","concat","handleResponse","handleError","ok","statusText","text","errorText","Error","filteredItems","filter","item","undefined","available","filterDataByPriceRange","marginRight","class","sm","Slider","range","size","defaultValue","aria-label","valueLabelDisplay","min","max","step","checked","key","Card","cursor","handleCardClick","Body","Title","Subtitle","description","owner","Modal","show","onHide","Header","closeButton","Footer","AboutUs","src","require","alt","Info","ReservationForm","start_date","end_date","item_id","itemid","user_name","item_name","setFormData","handleInputChange","event","_event$target","_objectSpread","_defineProperty","handleSubmit","window","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","callInvokeWithMethodAndArg","done","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","pop","prev","charAt","stop","rval","handle","complete","finish","delegateYield","GoogleLoginButton","showUnregisteredModal","setShowUnregisteredModal","handleLogin","_asyncToGenerator","_callee","googleData","url","res","_context","redirectOnLogin","handleMessage","setItem","isNew","_x","apply","arguments","GoogleOAuthProvider","clientId","process","GoogleLogin","buttonText","onSuccess","onFailure","result","cookiePolicy","RegisterPage","password","user_type","showPassword","setShowPassword","setButtonPopup","setUserEmail","loginData","axios","post","loginResponse","loginError","showPopup","LoginPage","View","equipmentData","setEquipmentData","reservationData","setReservationData","selectedReservation","setSelectedReservation","reviews","setReviews","selectedEquipment","setSelectedEquipment","showRemoveModal","setShowRemoveModal","_useState15","_useState16","showUpdateModal","setShowUpdateModal","_useState17","_useState18","showRemoveReservationModal","setShowRemoveReservationModal","_useState19","_useState20","showUpdateReservationModal","setShowUpdateReservationModal","_useState21","_useState22","_useState23","_useState24","showAddItemModal","setShowAddItemModal","_useState25","info","_useState26","handleAddItem","newEquipment","fetchEquipmentData","_useState27","_useState28","updateFormData","setUpdateFormData","_useState29","reservation_id","_useState30","updateReservationData","setUpdateReservationData","fetchReservationData","fetchReviewsData","dateDisplay","date","join","fluid","equipment","xs","lg","stopPropagation","handleRemoveClick","handleUpdateClick","reservation","handleRemoveReservationClick","handleUpdateReservationClick","review","index","controlId","UserDataList","userData","setUserData","setSelectedUser","fetchUserData","user","textDecoration","ProtectedRoute","UserProfile","usernameSelected","useParams","showReviewModal","setShowReviewModal","rating","formReviewData","setFormReviewData","items","newReview","source","App","HashRouter","Routes","Route","path","element","Checkout","Reservations","Profile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4496a3e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GearOnTheGo.47b19621.png\";","module.exports = __webpack_public_path__ + \"static/media/TeamLeader.8f244c00.jpg\";","module.exports = __webpack_public_path__ + \"static/media/SecurityLeader.22f8125a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/QALeader.5e2fdaea.png\";","module.exports = __webpack_public_path__ + \"static/media/RequirementLeader.81b0d49f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/ConfigurationLeader.e9095c75.png\";","module.exports = __webpack_public_path__ + \"static/media/ANDLeader.a49d1e1c.jpg\";","import React from \"react\";\nimport { Outlet } from \"react-router-dom\";\n//This component  serves as a placeholder for rendering child routes, allowing the content associated with specific routes to be displayed when navigated to\nexport default function Index() {\n  return <Outlet />;\n}\n","import React, { createContext, useContext, useState } from \"react\";\n\nconst UserContext = createContext();\n\nexport function UserProvider({ children }) {\n  const [username, setUsername] = useState(null);\n  const [userType, setUserType] = useState(null);\n// UserContext.Provider wraps the application and provides user-related values like username, userType, and functions to set them.\n// useUser is a hook that can be used in any component to access the user data stored in the UserContext.\n  return (\n    <UserContext.Provider value={{ username, setUsername, userType, setUserType }}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n\nexport function useUser() {\n  return useContext(UserContext);\n}\n","import React, { useState } from \"react\";\nimport {\n  Tabs,\n  Tab,\n  Navbar,\n  Container,\n  Nav,\n  NavDropdown,\n} from \"react-bootstrap\";\nimport { HashLink as Link } from \"react-router-hash-link\";\nimport \"../styles/Components/navbar.css\";\nimport { useUser } from \"./UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport function NavbarCustom(props) {\n  const { username, setUsername,} = useUser();\n  const navigate = useNavigate(); // Get the navigate function\n\n  //Google start\n  const [loginData, setLoginData] = useState(\n    localStorage.getItem(\"loginData\")\n      ? JSON.parse(localStorage.getItem(\"loginData\"))\n      : null\n  );\n  //Google stop\n  const handleLogout = () => {\n    //Google logout logic: \n    localStorage.removeItem(\"loginData\");\n    setLoginData(null);\n    setUsername(\"Guest\");\n    // Perform logout logic here\n    fetch(\"https://127.0.0.1:8000/api/logout\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          // Successful logout, you can redirect or show a confirmation message\n          setUsername(null);\n          console.log(\"Logout successful.\");\n        } else {\n          // Handle errors or display an error message\n          console.error(\"Logout failed.\");\n        }\n      })\n      .then((data) => {\n        console.log(data);\n      })\n      .catch((error) => console.error(\"Error:\", error));\n\n    // Navigate to the login page\n    navigate(\"/login\");\n  };\n\n  // const handleLogout = async () => {\n  //   try {\n  //     // fetch(\"https://127.0.0.1:8000/api/logout\", {\n  //     //   method: \"POST\",\n  //     //   headers: {\n  //     //     \"Content-Type\": \"application/json\",\n  //     //   },\n  //     // })\n  //     const response = await axios.post('/api/logout');\n  //     console.log(response.data.message); // Optional: Display logout message\n  //   } catch (error) {\n  //     console.error('Error logging out:', error);\n  //   }\n  // }\n\n  return (\n    <Navbar\n      collapseOnSelect\n      sticky=\"top\"\n      expand=\"lg\"\n      style={{ backgroundColor: \"#434F43\" }}\n    >\n      <Container>\n        <Navbar.Brand style={{ fontSize: \"35px\" }} href=\"#/\">\n          GearOnTheGo\n        </Navbar.Brand>\n        <p\n          id=\"welcomeMessage\"\n          style={{ fontSize: \"18px\", margin: \"0\", color: \"white\" }}\n        >\n          Welcome, {username || \"Guest\"}!\n        </p>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"me-auto\"></Nav>\n          <Nav className=\"topnav\" style={{ fontSize: \"18px\" }}>\n            <Nav.Link href=\"#/contact\">Contact</Nav.Link>\n\n            <NavDropdown title=\"Account\" id=\"collapsible-nav-dropdown\">\n              {username ? (\n                <>\n                  <NavDropdown.Item href=\"#/View\">Profile</NavDropdown.Item>\n                  <NavDropdown.Item onClick={handleLogout}>Logout</NavDropdown.Item>\n                </>\n              ) : (\n                <>\n                  <NavDropdown.Item href=\"#/login\">Login</NavDropdown.Item>\n                  <NavDropdown.Item href=\"#/register\">\n                    Register\n                  </NavDropdown.Item>\n                </>\n              )}\n            </NavDropdown>\n            <Nav.Link href=\"#/info\">About Us</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default NavbarCustom;\n","import React from \"react\";\nimport { FormGroup } from \"react-bootstrap\";\nimport { NavbarCustom } from \"../Components/Navbar.js\";\nimport Form from \"react-bootstrap/esm/Form.js\";\nimport Button from \"react-bootstrap/esm/Button.js\";\nimport \"../styles/pages/contact.css\";\nimport \"../styles/pages/home.css\";\n\n//This function is a functional component responsible for rendering a contact form and managing user input and submission status. \nexport default function Contact() {\n  let [firstName, setFirst] = React.useState(\"\");\n  let [lastName, setLast] = React.useState(\"\");\n  let [email, setEmail] = React.useState(\"\");\n  let [subject, setSubject] = React.useState(\"\");\n  let [msg, setMsg] = React.useState(\"\");\n  let [submitMsg, setSubmitMsg] = React.useState(\"\");\n\n  //This function handles the form submission. When the user submits the form\n  const submit = (e) => {\n    e.preventDefault();\n    setSubmitMsg(\"Loading...\");\n    setTimeout(\n      () =>\n        setSubmitMsg(\n          \"That worked! We will be in contact with you soon! Have a magical day!\"\n        ),\n      3000\n    );\n    setFirst(\"\");\n    setLast(\"\");\n    setEmail(\"\");\n    setSubject(\"\");\n    setMsg(\"\");\n  };\n\n  //This component  is rendering a contact form within a web page, styled with Bootstrap, allowing users to enter their first name, last name, email, subject, and message. \n  return (\n    <>\n      <NavbarCustom />\n      <div\n        className=\"text-center\"\n        style={{\n          justifyContent: \"center\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        <div\n          className=\"home-page\"\n          style={{ height: \"1000px\", width: \"5000px\" }}\n        >\n          <div\n            className=\"hours text-dark\"\n            style={{\n              fontFamily: \"blackPearl\",\n              textAlign: \"center\",\n              position: \"relative\",\n              marginTop: \"15px\",\n              width: \"auto\",\n              height: \"900px\",\n            }}\n          >\n            <h1>Contact Us</h1>\n            <div className=\"form\" id=\"formDiv\">\n              <Form className=\"contact-form\" onSubmit={submit}>\n                <FormGroup className=\"contact-page-form-group\">\n                  <Form.Label>First Name</Form.Label>\n                  <Form.Control\n                    type=\"name\"\n                    placeholder=\"Enter first name\"\n                    value={firstName}\n                    onChange={(e) => setFirst(e.target.value)}\n                    required\n                  />\n                </FormGroup>\n\n                <FormGroup className=\"contact-page-form-group\">\n                  <Form.Label className=\"form-label\">Last Name</Form.Label>\n                  <Form.Control\n                    type=\"name\"\n                    placeholder=\"Enter last name\"\n                    value={lastName}\n                    onChange={(e) => setLast(e.target.value)}\n                    required\n                  />\n                </FormGroup>\n\n                <FormGroup className=\"contact-page-form-group\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                  />\n                  <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                  </Form.Text>\n                </FormGroup>\n\n                <FormGroup className=\"contact-page-form-group\">\n                  <Form.Label>Subject</Form.Label>\n                  <Form.Control\n                    type=\"subject\"\n                    placeholder=\"Enter subject\"\n                    value={subject}\n                    onChange={(e) => setSubject(e.target.value)}\n                    required\n                  />\n                </FormGroup>\n\n                <FormGroup className=\"contact-page-form-group\">\n                  <Form.Label>Message</Form.Label>\n                  <Form.Control\n                    type=\"msg\"\n                    placeholder=\"Enter message\"\n                    as=\"textarea\"\n                    rows={5}\n                    value={msg}\n                    onChange={(e) => setMsg(e.target.value)}\n                    required\n                  />\n                </FormGroup>\n\n                <Button\n                  variant=\"primary\"\n                  type=\"submit\"\n                  style={{\n                    fontSize: \"20px\",\n                    width: \"150px\",\n                    marginLeft: \"15px\",\n                    marginBottom: \"25px\",\n                  }}\n                  id=\"submitButton\"\n                >\n                  Submit\n                </Button>\n              </Form>\n              {submitMsg && <div style={{ fontSize: \"35px\" }}>{submitMsg}</div>}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Container, Form, Button, Alert, Col, Row } from \"react-bootstrap\";\n\n//This function initializes and manages the checkoutForm and retreives reservation data\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport \"../styles/pages/checkout.css\";\nimport NavbarCustom from \"../Components/Navbar\";\nimport \"../styles/pages/register.css\";\nfunction CheckoutForm() {\n  const location = useLocation();\n  console.log(location.state.reservationDetails);\n  // create a variable formData to fetch all contexts passed from the reservation page\n  const formData = location.state.reservationDetails;\n  const price = location.state.reservationDetails.price;\n\n\n// This function informs users to fill in the required information before submission\n  function youClicked() {\n    alert(\n      \"Please fill in the boxes below.\\nIncomplete information will not be submitted.\"\n    );\n  }\n\n\n  const navigate = useNavigate();\n\n// This function allows the user to naviagte to the payment Successful page when called\n  const handleSuccessfulPayment = () => {\n    fetch(\"http://127.0.0.1:5000/api/makeReservation\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((response) => response.json())\n      .then((data) => console.log(data))\n      .catch((error) => console.error(\"Error:\", error));\n    navigate(\"/PaymentSuccessful\");\n  };\n\n//This function is executed when a form is submitted\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      console.log(\"Form is valid. Submitting...\");\n      //is_paid = true;\n      handleSuccessfulPayment();\n    }\n  };\n// This is the component for the checkout form, it collects payment information details with demographic data\n  return (\n    <div>\n      <NavbarCustom />\n      <Container className=\"checkout-form-container\">\n        <Row>\n          <Col md={3} className=\"items-hosted-column\">\n            <h1>Checkout</h1>\n            <div>\n        <p>Price: $ {price}</p>\n        </div>\n          </Col>\n          <Col md={2} className=\"items-hosted-column\">\n            <input\n              type=\"submit\"\n              style={{ marginTop: \"10%\" }}\n              id=\"clickme\"\n              value=\"Help\"\n              onClick={youClicked}\n            />\n          </Col>\n        </Row>\n        <hr />\n        <Form\n          name=\"Payment Details\"\n          method=\"post\"\n          action=\"\"\n          noValidate\n          onSubmit={handleFormSubmit}\n        >\n          <Form.Group>\n            <Form.Label>Full Name as it appears on your Card:</Form.Label>\n            <Form.Control type=\"text\" name=\"textName\" id=\"fullName\" required />\n          </Form.Group>\n\n          <Form.Label>Enter your Billing Address:</Form.Label>\n          <Row>\n            <Col>\n              <Form.Control\n                type=\"text\"\n                name=\"textName\"\n                id=\"streetAddress\"\n                placeholder=\"Street Address\"\n                required\n              />\n            </Col>\n            <Col>\n              <Form.Control\n                type=\"text\"\n                name=\"textName\"\n                id=\"unitNo\"\n                placeholder=\"House/Unit/Apartment No\"\n                required\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Form.Control\n                type=\"text\"\n                name=\"textName\"\n                id=\"state\"\n                placeholder=\"State (e.g., MA)\"\n                required\n              />\n            </Col>\n            <Col>\n              <Form.Control\n                type=\"text\"\n                name=\"textName\"\n                id=\"zipCode\"\n                placeholder=\"Zip Code\"\n                required\n              />\n            </Col>\n          </Row>\n\n          <Form.Group>\n            <Form.Label>Card Number:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"textName\"\n              id=\"cardNumber\"\n              required\n            />\n          </Form.Group>\n\n          <Row>\n            <Col>\n              <Form.Group>\n                <Form.Label>Valid Through (MM/YY):</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"textName\"\n                  id=\"validThru\"\n                  required\n                />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group>\n                <Form.Label>CVC:</Form.Label>\n                <Form.Control type=\"text\" name=\"textName\" id=\"cvc\" required />\n              </Form.Group>\n            </Col>\n          </Row>\n\n          <Form.Group>\n            <Form.Label>\n              Please write your experience here: (required)\n            </Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={5}\n              cols={50}\n              name=\"taComments\"\n              id=\"message\"\n              required\n            />\n          </Form.Group>\n\n          <Button variant=\"success\" className=\"FormButton\" type=\"submit\">\n            Pay\n          </Button>\n        </Form>\n      </Container>\n    </div>\n  );\n}\n\n//This function is used to make validaitons on the form to avoid information being entered that will prevent any mistakes from being passed into the database\nfunction validateForm() {\n  var fullName = document.getElementById(\"fullName\");\n  if (fullName.value.length < 2) {\n    alert(\"Error: Full Name should be at least two characters\");\n    fullName.focus();\n    return false;\n  }\n\n  var streetAddress = document.getElementById(\"streetAddress\");\n  if (streetAddress.value.length < 2) {\n    alert(\"Error: Street Address should be at least 2 characters\");\n    streetAddress.focus();\n    return false;\n  }\n\n  var state = document.getElementById(\"state\");\n  if (state.value.length !== 2) {\n    alert(\"Error: State should be only 2 characters, e.g: MA\");\n    state.focus();\n    return false;\n  }\n\n  var zipCode = document.getElementById(\"zipCode\");\n  if (zipCode.value.length < 4) {\n    alert(\"Error: Zip Code should be at least 4 characters\");\n    zipCode.focus();\n    return false;\n  }\n\n  var cvc = document.getElementById(\"cvc\");\n  if (cvc.value.length !== 3) {\n    alert(\"Error: The CVC number should be of 3 digits\");\n    cvc.focus();\n    return false;\n  }\n\n  var monthValid = document.getElementById(\"validThru\");\n  var monthValue = monthValid.value.trim();\n\n  var validPattern = /^(0[1-9]|1[0-2])\\/\\d{2}$/;\n\n  if (!validPattern.test(monthValue)) {\n    alert(\n      \"Error: Please enter your Credit Card's 'valid thru' information in the form MM/YY. e.g: 12/23\"\n    );\n    monthValid.focus();\n    return false;\n  }\n\n  var [validMonth, validYear] = monthValue.split(\"/\");\n\n\nvar currentDate = new Date();\n\n\nvar currentMonth = String(currentDate.getMonth() + 1).padStart(2, \"0\"); // Adding 1 to get the correct month (0-indexed)\nvar currentYear = String(currentDate.getFullYear()).slice(2);\n\nvalidMonth = parseInt(validMonth, 10);\nvalidYear = parseInt(validYear, 10);\n\n\ncurrentMonth = parseInt(currentMonth, 10);\ncurrentYear = parseInt(currentYear, 10);\n\nif (validYear < currentYear || (validYear === currentYear && validMonth < currentMonth)) {\n    alert(\"Sorry: The card you are using has expired. Please use a card that has a minimum expiry of \" + currentMonth + \"/\" + currentYear);\n    monthValid.focus();\n    return false;\n}\n\nvar cvc = document.getElementById(\"cvc\");\nvar cvcinput = cvc.value.trim(); \n\n\nvar cvcValid = /^\\d{3}$/;\n\nif (!cvcValid.test(cvcinput)) {\n    alert(\"Sorry: Invalid CVC. Please enter exactly 3 digits.\");\n    cvc.focus();\n    return false;\n}\n\n  var message = document.getElementById(\"message\");\n  if (message.value.length < 30) {\n    alert(\n      \"Error: Please enter a message of at least 30 characters before you submit\"\n    );\n    message.focus();\n    return false;\n  }\n\n  var cardNumberElement = document.getElementById(\"cardNumber\");\n  var cardNumber = cardNumberElement.value;\n\n  if (cardNumber.length < 12 || cardNumber.length > 16) {\n    alert(\"Error: Card Number should be of 12 to 16 digits\");\n    cardNumberElement.focus();\n    return false;\n  } else {\n    const cardDigits = cardNumber.split(\"\").map(Number);\n    cardDigits.reverse();\n\n    for (let i = 1; i < cardDigits.length; i += 2) {\n      cardDigits[i] *= 2;\n\n      if (cardDigits[i] >= 10) {\n        cardDigits[i] -= 9;\n      }\n    }\n\n    const valid = cardDigits.reduce((acc, val) => acc + val, 0);\n\n    if (valid % 10 === 0) {\n      alert(\"Card number is valid\");\n      return true;\n    } else {\n      alert(\"Invalid card number\");\n      return false;\n    }\n  }\n}\n\nexport default CheckoutForm;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\n//This function is the display that takes palce when the payment becomes succsseful\n\nimport NavbarCustom from \"../Components/Navbar\";\n\nfunction PaymentSuccessful() {\n  const marginStyle = {\n    marginLeft: \"20px\",\n  };\n\n  return (\n    <div>\n      <NavbarCustom />\n      <div style={{ textAlign: \"center\" }}>\n        <br />\n        <br />\n        <h2 style={marginStyle}>Payment Successfully Processed</h2>\n        <br />\n        <br />\n        <h3 style={marginStyle}>Thank you for renting with GearOnTheGo!</h3>\n        <h3 style={marginStyle}>\n          A copy of your purchase has been sent to your email\n        </h3>\n        <h3 style={marginStyle}>\n          View your reservations <Link to=\"/View\">here</Link> \n        </h3>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"flex-end\",\n          alignItems: \"center\",\n          minHeight: \"60vh\",\n        }}\n      >\n        <h5 style={marginStyle}>\n          Have any questions? Feel free to{\" \"}\n          <Link to=\"/contact\">Contact Us!</Link>\n        </h5>\n      </div>\n    </div>\n  );\n}\n\nexport default PaymentSuccessful;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Container, Row, Col, Card, Modal } from \"react-bootstrap\";\nimport Slider, { Range } from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NavbarCustom from \"../Components/Navbar\";\nimport \"../styles/pages/search.css\";\nimport \"../styles/Components/card.css\";\n\nfunction ItemSearchAndFilter() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [availabilityFilter, setAvailabilityFilter] = useState(\"searchItems\");\n  const [results, setResults] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [priceRange, setPriceRange] = useState([0, 500]);\n  const [filteredData, setFilteredData] = useState([]);\n  const navigate = useNavigate();\n//This hook fetches data when the component mounts or when the dependencies (availabilityFilter, priceRange, searchQuery) change.\n  useEffect(() => {\n    // Fetch initial data when the component mounts\n    fetchItems();\n  }, [availabilityFilter, priceRange, searchQuery]);\n  \n  //This is a fetch items function that looks into the equipment table of the database\n  const fetchItems = () => {\n    // Make an AJAX request to your backend API\n    let endpoint;\n\n    if (availabilityFilter === \"searchItems\") {\n      endpoint = `https://gearonthego-52bc9f57a8cd.herokuapp.com/api/searchItems?q=${searchQuery}&minPrice=${priceRange[0]}&maxPrice=${priceRange[1]}`;\n    } else if (availabilityFilter === \"available\") {\n      endpoint = `https://gearonthego-52bc9f57a8cd.herokuapp.com/api/searchItems?q=${searchQuery}&minPrice=${priceRange[0]}&maxPrice=${priceRange[1]}&availability=available`;\n    } else if (availabilityFilter === \"unavailable\") {\n      endpoint = `https://gearonthego-52bc9f57a8cd.herokuapp.com/api/searchItems?q=${searchQuery}&minPrice=${priceRange[0]}&maxPrice=${priceRange[1]}&availability=unavailable`;\n    } else {\n      endpoint = `https://gearonthego-52bc9f57a8cd.herokuapp.com/api/items?availability=${availabilityFilter}`;\n    }\n\n    fetch(endpoint).then(handleResponse).catch(handleError);\n  };\n\n//This function processes the response from the API, checking for errors and setting the results state accordingly.\n  const handleResponse = (response) => {\n    if (!response.ok) {\n      console.error(\"Response not OK:\", response.status, response.statusText);\n      response\n        .text()\n        .then((errorText) => console.error(\"Error response:\", errorText));\n      throw new Error(\"Network response was not ok\");\n    }\n\n    response\n      .json()\n      .then((data) => {\n        setResults(data);\n      })\n      .catch(handleError);\n  };\n//This function handles any errors that occur during the API request and sets the results state to an error message.\n  const handleError = (error) => {\n    console.error(\"Error:\", error);\n    setResults([{ message: \"An error occurred while fetching data.\" }]);\n  };\n//This function sets the selected equipment item and shows a modal when a card is clicked.\n  const handleCardClick = (item) => {\n    console.log(selectedItem);\n    setSelectedItem(item);\n    setShowModal(true);\n  };\n//This function navigates to the reservations page with the selected equipment item.\n  const handleReserveClick = () => {\n    console.log(selectedItem);\n    navigate(\"/reservations\", { state: { selectedItem: selectedItem } });\n  };\n//This function filters the results based on price range and availability, setting the filtered data.\n  const filterDataByPriceRange = () => {\n    const filteredItems = results.filter((item) => {\n      return (\n        item &&\n        item.price !== undefined && // Check if 'price' property exists and is not undefined\n        item.price >= priceRange[0] &&\n        item.price <= priceRange[1] &&\n        (availabilityFilter === \"searchItems\" || // Include all items if \"All\" is selected\n          (availabilityFilter === \"available\" && item.available) || // Include only available items\n          (availabilityFilter === \"unavailable\" && !item.available)) // Include only unavailable items\n      );\n    });\n    setFilteredData(filteredItems);\n  };\n\n//This function handles form submission by preventing the default behavior and calling fetchItems to update the results based on the filters.\n  const handleSubmit = (e) => {\n    e.preventDefault(); // Prevent the default form submission behavior\n    fetchItems();\n  };\n\n  // Use useEffect to call the filtering function whenever the priceRange changes\n  useEffect(() => {\n    filterDataByPriceRange();\n  }, [priceRange]);\n//This component renders a web page with a search input, filter options for equipment availability, a price range slider, and displays equipment items based on the applied filters.\n  return (\n    <div>\n      <NavbarCustom />\n\n      <div\n        style={{\n          marginLeft: \"10px\",\n          marginRight: \"10px\",\n        }}\n      >\n        {/* Search input */}\n        <div class=\"searchWrapper\">\n          <div class=\"searchBar\">\n            <input\n              type=\"text\"\n              id=\"searchInput\"\n              placeholder=\"Search by name or description\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n            />\n            <Button\n              id=\"searchButton\"\n              variant=\"success\"\n              type=\"submit\"\n              onClick={fetchItems}\n            >\n              Search\n            </Button>\n          </div>\n          {/* Filter Options */}\n          <div className=\"filterOptions\">\n            <Col md={6} sm={12}>\n              {/* Price Range Slider */}\n              <Slider\n                range\n                size=\"small\"\n                defaultValue={70}\n                aria-label=\"Small\"\n                valueLabelDisplay=\"auto\"\n                min={0}\n                max={500}\n                step={20}\n                value={priceRange}\n                onChange={(value) => setPriceRange(value)}\n              />\n              <div className=\"priceRangeLabels\">\n                <span>Min Price: ${priceRange[0]}</span>\n                <span>Max Price: ${priceRange[1]}</span>\n              </div>\n            </Col>\n            <Col md={4} sm={12}>\n              <div className=\"availabilityFilter\">\n                <div className=\"availabilityRadio\">\n                  <label>\n                    <input\n                      type=\"radio\"\n                      name=\"availabilityFilter\"\n                      value=\"searchItems\"\n                      onClick={() => {\n                        setSearchQuery(\"\");\n                        fetchItems();\n                      }}\n                      checked={availabilityFilter === \"searchItems\"}\n                      onChange={() => setAvailabilityFilter(\"searchItems\")}\n                    />{\" \"}\n                    All\n                  </label>\n                  <label>\n                    <input\n                      type=\"radio\"\n                      id=\"radioAvailable\"\n                      name=\"availabilityFilter\"\n                      value=\"available\"\n                      // onClick={(e) => setSearchQuery(\"\")}\n                      onClick={() => {\n                        setSearchQuery(\"\");\n                        setAvailabilityFilter(\"available\");\n                        fetchItems();\n                      }}\n                      checked={availabilityFilter === \"available\"}\n                      // onChange={() => setAvailabilityFilter(\"available\")}\n                    />{\" \"}\n                    Available\n                  </label>\n                  <label>\n                    <input\n                      type=\"radio\"\n                      id=\"radioUnavailable\"\n                      name=\"availabilityFilter\"\n                      value=\"unavailable\"\n                      // onClick={(e) => setSearchQuery(\"\")}\n                      onClick={() => {\n                        setSearchQuery(\"\");\n                        setAvailabilityFilter(\"unavailable\");\n                        fetchItems();\n                      }}\n                      checked={availabilityFilter === \"unavailable\"}\n                      // onChange={() => setAvailabilityFilter(\"unavailable\")}\n                    />{\" \"}\n                    Unavailable\n                  </label>\n                </div>\n              </div>\n            </Col>\n          </div>\n        </div>\n\n        {/* Display Results */}\n\n        <div className=\"container2\">\n          <div className=\"row equal-height-cards\">\n            {results\n              .filter(\n                (item) =>\n                  item &&\n                  item.price !== undefined &&\n                  item.price >= priceRange[0] &&\n                  item.price <= priceRange[1]\n              )\n              .map((item) => (\n                <Col key={item.id} className=\"col-md-4 col-12\">\n                  <Card\n                    key={item.id}\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => handleCardClick(item)}\n                  >\n                    <Card.Body>\n                      <Card.Title>{item.name}</Card.Title>\n                      <Card.Subtitle className=\"mb-2 text-muted\">\n                        Status: {item.available ? \"Available\" : \"Unavailable\"}\n                      </Card.Subtitle>\n                      <Card.Text>{item.description}</Card.Text>\n                      <Card.Text>Price: ${item.price}</Card.Text>\n                      <Card.Text>Owner: {item.owner}</Card.Text>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              ))}\n          </div>\n        </div>\n\n        {/* Modal for displaying details */}\n        <Modal show={showModal} onHide={() => setShowModal(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>{selectedItem?.name}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>\n              Status: {selectedItem?.available ? \"Available\" : \"Unavailable\"}\n            </p>\n            <p>Description: {selectedItem?.description}</p>\n            <p>Price: {selectedItem?.price}</p>\n            <p>Owner: {selectedItem?.owner}</p>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={handleReserveClick}>Reserve</Button>\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setSearchQuery(\"\");\n                setShowModal(false);\n                setAvailabilityFilter(\"searchItems\");\n                fetchItems();\n              }}\n            >\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n\nexport default ItemSearchAndFilter;\n","import React from \"react\";\nimport \"../styles/Components/aboutus.css\";\n// About us page that lives on the NAVBAR and renders when opened\nfunction AboutUs() {\n  return (\n    <div className=\"containerAbout\">\n      <img\n        className=\"logo\"\n        src={require(\"../Media/GearOnTheGo.png\")}\n        alt=\"Gear On The Go\"\n      />\n      <br />\n      <h2>Step into a world of adventure with Gear On the Go! </h2>\n      <p>\n        Hey there, thrill-seekers, outdoor enthusiasts and gear heads! Get ready\n        to embark on a game-changing journey with our cutting-edge web\n        application. Picture this: a dynamic team formed as part of Boston\n        University's Software Engineering class, driven by the mission to\n        revolutionize following our passion wherever we are!\n      </p>\n      <br />\n      <p>\n        Introducing Gear On The Go—an ingenious platform connecting owners of\n        top-notch recreational gear, from sleek paddleboards to rugged hiking\n        equipment, and even high-performance bikes! Imagine having the freedom\n        to pursue your passions without the hassle of ownership. Whether you're\n        a casual explorer or a globe-trotting adventurer, we've got you covered.\n      </p>\n      <br />\n      <p>\n        Why buy when you can experience the best without the commitment? Our\n        platform brings together equipment owners looking to share their\n        treasures during downtime. And for those on the move or seeking an\n        adrenaline rush, Gear on the Go unlocks access to top-tier gear, right when\n        you need it.\n      </p>\n      <br />\n      <p>\n        Seize this golden opportunity to turn your unused equipment into a\n        thriving business, or dive headfirst into a world of endless\n        possibilities as a renter. Gear On The Go is not just an application;\n        it's a lifestyle, an experience, a chance to embrace the great outdoors\n        like never before!\n      </p>\n      <br />\n      <p>Gear up for a revolution—Gear up for Gear On The Go! 🚀🔥</p>\n      <br />\n      <h2>Meet Our Team! </h2>\n      <div className=\"team-images\">\n        <div className=\"image-container\">\n          <img\n            className=\"samantha\"\n            src={require(\"../Media/TeamLeader.jpg\")}\n            alt=\"Samantha\"\n          />\n          <div className=\"overlay\">\n            <div className=\"text\">\n              Meet our Team Leader Samantha! Fun Fact: Samantha has a twin\n              sister! Double the trouble, double the brilliance!🌟👯‍♀️\n            </div>\n          </div>\n        </div>\n        <br />\n        <div className=\"image-container\">\n          <img\n            className=\"ahnaf\"\n            src={require(\"../Media/SecurityLeader.jpg\")}\n            alt=\"Ahnaf\"\n          />\n          <div className=\"overlay\">\n            <div className=\"text\">\n              Meet our Security Leader Ahnaf! Fun Fact: Ahnaf finds solace in\n              leisurely drives, using them as a means to unwind and release\n              stress!🚗\n            </div>\n          </div>\n        </div>\n        <br />\n        <div className=\"image-container\">\n          <img\n            className=\"laz\"\n            src={require(\"../Media/QALeader.png\")}\n            alt=\"Laz\"\n          />\n          <div className=\"overlay\">\n            <div className=\"text\">\n              Meet our Quality Assurance Leader Lazaro! Fun Fact: Laz is out\n              there, training like a powerhouse for powerlifting!💪\n            </div>\n          </div>\n        </div>\n        <br />\n        <div className=\"image-container\">\n          <img\n            className=\"saahil\"\n            src={require(\"../Media/RequirementLeader.jpeg\")}\n            alt=\"Saahil\"\n          />\n          <div className=\"overlay\">\n            <div className=\"text\">\n              Meet our Requirements Leader Saahil! Fun Fact: \"Saahil knows how\n              to play the piano, but looking at keys confuses him, so he tries\n              to distract himself by glancing anywhere but at the black and\n              white ivories!\" 🎹😄{\" \"}\n            </div>\n          </div>\n        </div>\n        <br />\n        <div className=\"image-container\">\n          <img\n            className=\"shajee\"\n            src={require(\"../Media/ConfigurationLeader.png\")}\n            alt=\"Shajee\"\n          />\n          <div className=\"overlay\">\n            <div className=\"text\">\n              Meet our Configuration Leader Shajee! Fun Fact: Our Configuration\n              leader is a rockstart behind the scenes. You can often see him\n              singing and strumming his guitar!🎸🎤🎶\n            </div>\n          </div>\n        </div>\n        <br />\n        <div className=\"image-container\">\n          <img\n            className=\"jay\"\n            src={require(\"../Media/ANDLeader.jpg\")}\n            alt=\"Jian\"\n          />\n          <div className=\"overlay\">\n            <div className=\"text\">\n              Meet our Architecture and Design Leader Jay! Fun Fact: Horseback\n              riding may be the most calm outdoor experience for Jay!🐎\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutUs;\n","import React from \"react\";\nimport AboutUs from \"../Components/AboutUs\";\nimport { NavbarCustom } from \"../Components/Navbar\";\n//This component calls the AboutUs component to render on the screen\nfunction Info() {\n  return (\n    <div className=\"info\">\n      <NavbarCustom />\n      <AboutUs />\n    </div>\n  );\n}\n\nexport default Info;\n","import React, { useState } from \"react\";\nimport { NavbarCustom } from \"../Components/Navbar\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport { useLocation } from \"react-router-dom\";\nimport { useUser } from \"../Components/UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/pages/reservations.css\";\n\n//This function is used to render a reservation form, it retrieves the selected items information, and user data from the components props, and manages the form data\nfunction ReservationForm() {\n  const location = useLocation();\n  const { username } = useUser();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    start_date: \"\",\n    end_date: \"\",\n    // item_id, price are contexts passed from items; user_name is a global user context\n    item_id: location.state.selectedItem.itemid,\n    user_name: username,\n    price: location.state.selectedItem.price,\n    item_name: location.state.selectedItem.name,\n  });\n\n  const selectedItem = location.state.selectedItem;\n\n  //This function is triggered when an input fields value changes\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  //This function handles the form submission when the Make Reservation button is clicked. IT performs date validation, and sends a post to the backend using the feth API\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Send the formData as JSON to your Flask back-end here\n    if (formData.end_date != null && formData.end_date < formData.start_date) {\n      // enforce end user enter valid inputs: that rental end date can't be before start date\n      window.alert(\"End date must be after the start date!\");\n    } else if (new Date(formData.start_date) < new Date()) {\n      // also rental start date can't be in the past\n      window.alert(\"Start date must be after today!\");\n    } else if (formData.end_date == \"\" || formData.start_date == \"\") {\n      window.alert(\"Please enter a date!\");\n    } else {\n      navigate(\"/Checkout\", {\n        state: { reservationDetails: formData, selectedItem },\n      });\n    }\n  };\n  //This component provides a user interface for reserving an item, displaying item details, date inputs, and a checkout button, and handles the submission and confirmation of the reservaiton\n  return (\n    <div>\n      <NavbarCustom />\n      <div className=\"form\" id=\"formDiv\">\n        <Form className=\"reservation-form\" onSubmit={handleSubmit}>\n          <h3>Reservation Details</h3>\n          <FormGroup className=\"reservation-page-form-group\">\n            <label>Item Name</label>\n            <p>{selectedItem.name}</p>\n          </FormGroup>\n          <FormGroup className=\"reservation-page-form-group\">\n            <label>Item Description</label>\n            <p>{selectedItem.description}</p>\n          </FormGroup>\n          <FormGroup className=\"reservation-page-form-group\">\n            <label>Rental Start Date</label>\n            <Form.Control\n              type=\"date\"\n              placeholder=\"Enter Date\"\n              name=\"start_date\"\n              value={formData.start_date}\n              onChange={handleInputChange}\n              required\n            />\n          </FormGroup>\n          <FormGroup className=\"reservation-page-form-group\">\n            <label>Rental End Date</label>\n            <Form.Control\n              type=\"date\"\n              placeholder=\"Enter Date\"\n              name=\"end_date\"\n              value={formData.end_date}\n              onChange={handleInputChange}\n              required\n            />\n          </FormGroup>\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            onClick={handleSubmit}\n            style={{\n              fontSize: \"20px\",\n              width: \"150px\",\n              marginLeft: \"35%\",\n              marginBottom: \"25px\",\n            }}\n            id=\"submitButton\"\n          >\n            Checkout\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default ReservationForm;\n","import React, { useState } from \"react\";\nimport { useUser } from \"./UserContext\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport { Modal, Button } from \"react-bootstrap\";\n// Google import start\nimport { GoogleLogin, GoogleOAuthProvider } from \"@react-oauth/google\";\nimport \"../styles/pages/register.css\";\n// Google import stop\n\nexport function GoogleLoginButton(props) {\n  const navigate = useNavigate();\n  const { setUsername } = useUser();\n  const [showUnregisteredModal, setShowUnregisteredModal] = useState(false);\n  const [loginData, setLoginData] = useState(\n    localStorage.getItem(\"loginData\")\n      ? JSON.parse(localStorage.getItem(\"loginData\"))\n      : null\n  );\n\n  // Failure handling for google login start\n  const handleFailure = (result) => {\n    alert(JSON.stringify.result);\n  };\n  // Failure handling for google login stop\n  // Login handling for google login start\n  const handleLogin = async (googleData) => {\n    var url = \"https://gearonthego-52bc9f57a8cd.herokuapp.com/api/register-google\";\n    if (props.redirectOnLogin) url = \"https://gearonthego-52bc9f57a8cd.herokuapp.com/api/login-google\";\n\n    const res = await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        googleData: googleData,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    const data = await res.json();\n//This coniditoning is handling a  login process and handles responses from a Google login attempt.\n    if (res.ok && data && data.name && data.email) {\n      const username = data.email;\n      props.handleMessage(username);\n      console.log(\"Logged in\", username);\n\n      setUsername(username);\n      localStorage.setItem(\"loginData\", JSON.stringify(data));\n    }\n    if (res.status === 404) {\n      // If the user is unregistered, show the unregistered user modal\n      setShowUnregisteredModal(true);\n    } else {\n      props.handleMessage(\"Google login failed. Please register.\");\n    }\n\n    if (res.ok && (props.redirectOnLogin || !data.isNew)) navigate(\"/\");\n  };\n  //This is a react component that renders a Google login button and a modal to handle unregistered users.\n  return (\n    <div className=\"App\">\n      <div className=\"GoogleLoginDiv\">\n        <div className=\"GoogleLogin\">\n          <GoogleOAuthProvider\n            clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n            id={\"google-login-auth\"}\n          >\n            <GoogleLogin\n              id=\"google-login-button\"\n              clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n              buttonText=\"Sign up with Google\"\n              onSuccess={handleLogin}\n              onFailure={handleFailure}\n              cookiePolicy={\"single_host_origin\"}\n            ></GoogleLogin>\n          </GoogleOAuthProvider>\n        </div>\n      </div>\n      <Modal\n        show={showUnregisteredModal}\n        onHide={() => setShowUnregisteredModal(false)}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Unregistered User</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          You are not registered. Please register before logging in.\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => setShowUnregisteredModal(false)}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default GoogleLoginButton;\n","import React, { useState } from \"react\";\nimport { NavbarCustom } from \"../Components/Navbar\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport \"../styles/pages/password.css\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"../styles/pages/register.css\";\nimport \"../styles/Components/popup.css\";\nimport GoogleLoginButton from \"../Components/GoogleLoginButton\";\n// Google import stop\nimport axios from \"axios\";\nimport { useUser } from \"../Components/UserContext\";\n\n//This funtion manages various states for form data, user type, form validation errors, and whether to show or hide a password.\nfunction RegisterPage() {\n  const { setUsername } = useUser();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    user_type: \"\",\n  });\n  const [showPassword, setShowPassword] = useState(false);\n\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\");\n  const navigate = useNavigate();\n  const showPopup = () => {\n    setButtonPopup(true);\n  };\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  //This function is used to toggle the visibility of a password.\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetch(\"https://gearonthego-52bc9f57a8cd.herokuapp.com/api/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ ...formData }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          return response.json().then((data) => {\n            console.log(\"registration failed\");\n            window.alert(\n              \"Failed to Register:\\nCheck Email is valid\\nPassword is between 8 and 20 characters long\"\n            );\n            console.log(response);\n          });\n        } else {\n          return response.json().then((data) => {\n            console.log(data);\n            // Automatically log in the user after registration\n            const loginData = {\n              email: formData.email, // Use the email from the registration form\n              password: formData.password, // Use the password from the registration form\n            };\n\n            // Perform a login request\n            axios\n              .post(\"https://gearonthego-52bc9f57a8cd.herokuapp.com/api/login\", loginData)\n              .then((loginResponse) => {\n                if (loginResponse.status === 201) {\n                  // Successful login\n                  const user = loginResponse.data;\n                  const username = user.username;\n                  setUsername(username);\n                  console.log(\"Logged in\", username);\n\n                  // Redirect to the home page or any other desired location\n                  navigate(\"/\");\n                } else {\n                  // Handle l\n                  window.alert(\"Failed to Register\");\n                  console.log(\"Login failed:\", loginResponse.data);\n                }\n              })\n              .catch((loginError) => {\n                // Handle login request errors\n                window.alert(\"Failed to Register\");\n                console.error(\"Error:\", loginError);\n              });\n            setFormData({\n              email: \"\",\n              password: \"\",\n            });\n          });\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n  //This component is rendering a registration form for both native username and password login, and google login authentication\n  return (\n    <div>\n      <NavbarCustom />\n      <div className=\"form\" id=\"formDiv\">\n        <Form className=\"reservation-form\" onSubmit={handleSubmit}>\n          <h3 style={{ marginLeft: \"35%\", marginBottom: \"10%\" }}>Welcome!</h3>\n          <FormGroup className=\"contact-page-form-group\">\n            <Form.Control\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Enter Email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleInputChange}\n              required\n            />\n          </FormGroup>\n          <FormGroup className=\"contact-page-form-group\">\n            <div className=\"password-input-container\">\n              <Form.Control\n                type={showPassword ? \"text\" : \"password\"}\n                placeholder=\"Enter Password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleInputChange}\n                required\n              />\n              <span\n                className={`password-toggle ${showPassword ? \"visible\" : \"\"}`}\n                onClick={togglePasswordVisibility}\n              >\n                {showPassword ? (\n                  <i className=\"fas fa-eye-slash\"></i>\n                ) : (\n                  <i className=\"fas fa-eye\"></i>\n                )}\n              </span>\n            </div>\n          </FormGroup>\n          <Button\n            className=\"FormButton\"\n            variant=\"success\"\n            type=\"submit\"\n            id=\"submitButton\"\n          >\n            Register\n          </Button>\n          <GoogleLoginButton\n            redirectOnLogin={false}\n            handleMessage={() => {}}\n            setUserEmail={(email) => {\n              setUserEmail(email);\n            }}\n            showPopup={showPopup}\n          />\n\n          <p className=\"dont-have-account\">\n            Already have an account? <Link to=\"/login\">Login</Link>\n          </p>\n        </Form>\n      </div>\n    </div>\n  );\n}\nexport default RegisterPage;\n","import React, { useState } from \"react\";\nimport { NavbarCustom } from \"../Components/Navbar\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useNavigate, Link } from \"react-router-dom\"; // Import useNavigate\nimport { useUser } from \"../Components/UserContext\";\n// Google import start\nimport GoogleLoginButton from \"../Components/GoogleLoginButton\";\n// Google import stop\nimport \"../styles/pages/password.css\";\nimport \"../styles/pages/register.css\";\n\n//This function is used to manager the user login process and initializes state for a submission message\nfunction LoginPage() {\n  const { setUsername, setUserType } = useUser();\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  //This function handles changes in the email and password input fields.\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  //This function toggles the visibility of the password input field.\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    axios\n      .post(\"https://gearonthego-52bc9f57a8cd.herokuapp.com/api/login\", formData)\n      .then((response) => {\n        console.log(response);\n        if (response.status === 201) {\n          const user = response.data;\n          const username = user.username;\n          setUsername(username);\n          console.log(\"Logged in\", username);\n\n          navigate(\"/\");\n        } else if (response.status === 202) {\n          window.alert(\"Wrong Password!\");\n        } else if (response.status === 203) {\n          window.alert(\"Wrong User\");\n        } else {\n          window.alert(\"Failed to login\");\n        }\n      })\n      .catch((error) => {\n        window.alert(\"Failed to login\");\n        console.error(\"Error:\", error);\n      });\n    setFormData({\n      email: \"\",\n      password: \"\",\n    });\n  };\n  //This component is used to render the login page for the user to log into their account\n  return (\n    <div>\n      <NavbarCustom />\n      <div className=\"form\" id=\"formDiv\">\n        <Form className=\"reservation-form\" onSubmit={handleSubmit}>\n          <h3 style={{ marginLeft: \"30%\", marginBottom: \"10%\" }}>\n            Welcome Back!\n          </h3>\n          <FormGroup className=\"contact-page-form-group\">\n            <Form.Control\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Enter Email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleInputChange}\n              required\n            />\n          </FormGroup>\n          <FormGroup className=\"contact-page-form-group\">\n            <div className=\"password-input-container\">\n              <Form.Control\n                type={showPassword ? \"text\" : \"password\"}\n                placeholder=\"Enter Password\"\n                name=\"password\"\n                id=\"password\"\n                value={formData.password}\n                onChange={handleInputChange}\n                required\n              />\n              <span\n                className={`password-toggle ${showPassword ? \"visible\" : \"\"}`}\n                onClick={togglePasswordVisibility}\n              >\n                {showPassword ? (\n                  <i className=\"fas fa-eye-slash\"></i>\n                ) : (\n                  <i className=\"fas fa-eye\"></i>\n                )}\n              </span>\n            </div>\n          </FormGroup>\n          <Button\n            className=\"FormButton\" // Apply Bootstrap class for button width\n            variant=\"success\"\n            type=\"submit\"\n            id=\"submitButton\"\n          >\n            Log in\n          </Button>\n          <GoogleLoginButton\n            redirectOnLogin={true}\n            handleMessage={() => {}}\n            setUserEmail={() => {}}\n          ></GoogleLoginButton>\n          {/* Add a link inside the form */}\n          <p className=\"dont-have-account\">\n            Don't have an account? <Link to=\"/register\">Sign up</Link>\n          </p>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import React, { useState, useEffect } from \"react\";\nimport { NavbarCustom } from \"../Components/Navbar\";\nimport Card from \"react-bootstrap/esm/Card\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Row from \"react-bootstrap/esm/Row\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Modal from \"react-bootstrap/esm/Modal\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport Form from \"react-bootstrap/esm/Form\";\nimport { useUser } from \"../Components/UserContext\";\nimport FormGroup from \"react-bootstrap/esm/FormGroup\";\nimport { useNavigate } from \"react-router-dom\";\nfunction View() {\n  const [equipmentData, setEquipmentData] = useState([]);\n  const [reservationData, setReservationData] = useState([]);\n  const [selectedReservation, setSelectedReservation] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  // click modal is not necessary for reservation\n  const [reviews, setReviews] = useState([]); // State for reviews\n  const [selectedEquipment, setSelectedEquipment] = useState(null);\n  const [showRemoveModal, setShowRemoveModal] = useState(false);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  // adding similar remove/update modal for reservation\n  const [showRemoveReservationModal, setShowRemoveReservationModal] = useState(false);\n  const [showUpdateReservationModal, setShowUpdateReservationModal] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const { username } = useUser();\n  const navigate = useNavigate();\n  const [showAddItemModal, setShowAddItemModal] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    info: \"\",\n    status: \"\",\n    price: \"\",\n  });\n//This is a function that creates a new object to add an item to a user\n  const handleAddItem = () => {\n    const newEquipment = {\n      name: formData.name,\n      description: formData.info,\n      status: formData.status,\n      price: formData.price,\n      owner: username,\n    };\n//This fetch call  makes a POST request to the server's API to add new equipment. \n//Upon a successful response, it logs the data, navigates to a different route, and optionally updates the equipment data.\n    fetch(\"https://gearonthego-52bc9f57a8cd.herokuapp.com/api/addEquipment\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newEquipment),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        navigate(\"/View\");\n        // Optionally, you can update the equipmentData state here\n        fetchEquipmentData();\n      })\n      .catch((error) => console.error(\"Error:\", error));\n    setShowAddItemModal(false); // Close the modal after adding the item\n    setFormData({\n      name: \"\",\n      info: \"\",\n      status: \"\",\n      price: \"\",\n    });\n  };\n//This function handles the input and handles changes to the input fields\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: value });\n  };\n  // This function initializes a state variable 'updateFormData' using 'useState'\n  const [updateFormData, setUpdateFormData] = useState({\n    id: null,\n    name: \"\",\n    description: \"\",\n    status: \"\",\n    price: \"\",\n    owner: \"\",\n  });\n  // This function initializes a state variable 'updateReservationData' using 'useState'\n  const [updateReservationData, setUpdateReservationData] = useState({\n    reservation_id: null,\n    start_date: \"\",\n    end_date: \"\",\n    item_id: \"\",\n    user_name: \"\",\n    price: \"\",\n    item_name: \"\"\n  });\n//This function Uses the 'useEffect' hook to perform data fetching when 'username' changes\n  useEffect(() => {\n    fetchEquipmentData();\n    fetchReservationData();\n    fetchReviewsData();\n  }, [username]);\n//This function fetches the equipment from the database server\n  const fetchEquipmentData = () => {\n    fetch(\"https://gearonthego-52bc9f57a8cd.herokuapp.com/api/getEquipment\")\n      .then((response) => response.json())\n      .then((data) => setEquipmentData(data))\n      .catch((error) => console.error(\"Error:\", error));\n  };\n//This function fetches the reservations from the database server\n  const fetchReservationData = () => {\n    fetch(\"https://gearonthego-52bc9f57a8cd.herokuapp.com/api/getReservation\")\n      .then((response) => response.json())\n      .then((data) => setReservationData(data))\n      .catch((error) => console.error(\"Error:\", error));\n  };\n//This function fetches the reviews from the database server\n  const fetchReviewsData = () => {\n    fetch(`https://gearonthego-52bc9f57a8cd.herokuapp.com/api/getReviews/${username}`)\n      .then((response) => response.json())\n      .then((data) => setReviews(data))\n      .catch((error) => console.error(\"Error:\", error));\n  };\n//This function is triggered from a click event It prevents event propagation to parent elements (likely to avoid unintended behavior), \n//sets the selected equipment, and shows a modal dialog for confirming the removal of the equipment.\n  const handleRemoveClick = (event, equipment) => {\n    event.stopPropagation();\n    setSelectedItem(equipment);\n    setShowRemoveModal(true);\n  };\n\n//This function handles the removal and sends a confirmaiton of the removal\n  const handleRemoveConfirm = () => {\n    if (!selectedItem) {\n      console.error(\"No item selected for removal.\");\n      return;\n    }\n    console.log(\"Selected Item:\", selectedItem);\n    fetch(`https://gearonthego-52bc9f57a8cd.herokuapp.com/api/removeEquipment/${selectedItem.itemid}`, {\n      method: \"DELETE\",\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        fetchEquipmentData();\n        setShowRemoveModal(false);\n        setSelectedItem(null);\n      })\n      .catch((error) => console.error(\"Error:\", error));\n  };\n// This function is used to display the users items\n  const handleShowAddItemModal = () => {\n    setShowAddItemModal(true);\n  };\n//This function is used to handled closing the screen displaying the item\n  const handleCloseAddItemModal = () => {\n    setShowAddItemModal(false);\n  };\n//This function handles any updates made to the item\n  const handleUpdateClick = (event, equipment) => {\n    event.stopPropagation();\n    setSelectedItem(equipment);\n    setUpdateFormData({\n      id: equipment.itemid,\n      name: equipment.name,\n      description: equipment.description,\n      status: equipment.status,\n      price: equipment.price,\n      owner: equipment.owner,\n    });\n    setShowUpdateModal(true);\n  };\n// This function is used to make a PUT request to update the equipment data on the database\n  const handleUpdateSubmit = (event) => {\n    event.preventDefault();\n    console.log(updateFormData);\n    fetch(`https://gearonthego-52bc9f57a8cd.herokuapp.com/api/updateEquipment/${updateFormData.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updateFormData),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        fetchEquipmentData();\n        setShowUpdateModal(false);\n      })\n      .catch((error) => console.error(\"Error:\", error));\n  };\n\n  // Modal components for cancel/update reservations\n  const handleRemoveReservationClick = (event, reservation) => {\n    event.stopPropagation();\n    setSelectedReservation(reservation);\n    setShowRemoveReservationModal(true);\n  };\n\n//This function it checks whether a selectedItem is defined. \n//If it's not defined (i.e., no item is selected), it logs an error message to the console and exits the function.\n\n  const handleRemoveReservationConfirm = () => {\n    if (!selectedReservation) {\n      console.error(\"No reservation selected for removal.\");\n      return;\n    }\n    console.log(\"Selected Reservation:\", selectedReservation);\n    fetch(\n      // reservation will be removed from the database -> payment will be returned via Payment system (implementation details omitted)\n      `https://gearonthego-52bc9f57a8cd.herokuapp.com/api/removeReservation/${selectedReservation.reservation_id}`,\n      {\n        method: \"DELETE\",\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        fetchReservationData();\n        setShowRemoveReservationModal(false);\n        setSelectedReservation(null);\n      })\n      .catch((error) => console.error(\"Error:\", error));\n  };\n//This function is triggered by a click event, and sets the selected reservation, \n//populates the updateReservationData state with reservation details, and shows a modal for updating the reservation.\n  const handleUpdateReservationClick = (event, reservation) => {\n    event.stopPropagation();\n    setSelectedReservation(reservation);\n    setUpdateReservationData({\n      reservation_id: reservation.reservation_id,\n      start_date: reservation.start_date,\n      end_date: reservation.end_date,\n      item_id: reservation.item_id,\n      user_name: reservation.user_name,\n      price: reservation.price,\n      item_name: reservation.item_name\n    });\n    setShowUpdateReservationModal(true);\n  };\n//This function makes a PUT request to update reservation data on the server, \n//logs the response data, fetches updated reservation data, and closes the update modal.\n  const handleUpdateReservationSubmit = (event) => {\n    event.preventDefault();\n    console.log(updateReservationData);\n    fetch(\n      `https://gearonthego-52bc9f57a8cd.herokuapp.com/api/updateReservation/${updateReservationData.reservation_id}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(updateReservationData),\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        fetchReservationData();\n        setShowUpdateReservationModal(false);\n      })\n      .catch((error) => console.error(\"Error:\", error));\n  };\n//This function sets the selected equipment and shows a modal for displaying additional information about the equipment.\n  const handleCardClick = (equipment) => {\n    setSelectedEquipment(equipment);\n    setShowModal(true);\n  };\n///This function navigates to the \"/AllProfile\" route. It's typically used for redirecting the user to a profile-related page or component.\n  const handleProfileClick = () => {\n    navigate(\"/AllProfile\");\n  };\n//This function formats the date to display the weekday (short form), numeric day, short month, and numeric year, according to the \"en-US\" locale\n  const dateDisplay = (date) => {\n    // normal date format to change GMT to EST is hard to implement \n    // -> fall back to use string method to format\n    return date.split(\" \").slice(1, 4).join(\" \");\n  };\n//This is the return componant that renders a user interface that shows equipment items and active reservation, which is being filtered based on the user\n  return (\n    <div>\n      <NavbarCustom />\n      <Container fluid>\n        <Row>\n          <Col md={8} className=\"items-hosted-column\">\n            <Button\n              variant=\"success\"\n              type=\"submit\"\n              style={{\n                fontSize: \"20px\",\n                width: \"45%\",\n                marginRight: \"5px\",\n                marginTop: \"15px\",\n                marginBottom: \"25px\",\n              }}\n              id=\"addButton\"\n              onClick={handleShowAddItemModal}\n            >\n              Add Item\n            </Button>\n            <h2>Equipment Items</h2>\n            <Row>\n              {equipmentData.map(\n                (equipment) =>\n                  equipment.owner === username && (\n                    <Col key={equipment.id} xs={12} sm={6} md={6} lg={6}>\n                      <Card\n                        onClick={() => handleCardClick(equipment)}\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        <Card.Body>\n                          <Card.Title>{equipment.name}</Card.Title>\n                          <Card.Subtitle className=\"mb-2 text-muted\">\n                            Status: {equipment.status}\n                          </Card.Subtitle>\n                          <Card.Text>{equipment.description}</Card.Text>\n                          <Card.Text>Price: ${equipment.price}</Card.Text>\n                          <Card.Text>Owner: {equipment.owner}</Card.Text>\n                          <Button\n                            variant=\"danger\"\n                            name={`remove-${equipment.itemid}`}\n                            onClick={(e) => handleRemoveClick(e, equipment)}\n                            style={{\n                              marginLeft: \"5px\",\n                              marginRight: \"5px\",\n                            }}\n                          >\n                            Remove\n                          </Button>\n                          <Button\n                            variant=\"success\"\n                            name={`update-${equipment.itemid}`}\n                            onClick={(e) => handleUpdateClick(e, equipment)}\n                            style={{\n                              marginLeft: \"5px\",\n                              marginRight: \"5px\",\n                            }}\n                          >\n                            Update\n                          </Button>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  )\n              )}\n            </Row>\n            <h2>Active Reservations</h2>\n            <Row>\n              {reservationData.map(\n                (reservation) =>\n                  reservation.user_name === username && (\n                    <Col\n                      key={reservation.reservation_id}\n                      xs={12}\n                      sm={6}\n                      md={6}\n                      lg={6}\n                    >\n                      <Card style={{ cursor: \"pointer\" }}>\n                        <Card.Body>\n                          <Card.Text>\n                            Start Date: {dateDisplay(reservation.start_date)}\n                          </Card.Text>\n                          <Card.Text>\n                            End Date: {dateDisplay(reservation.end_date)}\n                          </Card.Text>\n                          <Card.Text>\n                            Price: {reservation.price}\n                          </Card.Text>\n                          <Card.Text>\n                            Item Name: {reservation.item_name}\n                          </Card.Text>\n                          <Button\n                            variant=\"danger\"\n                            name={`remove-${reservation.reservation_id}`}\n                            onClick={(e) =>\n                              handleRemoveReservationClick(e, reservation)\n                            }\n                          >\n                            Cancel\n                          </Button>\n                          <Button\n                            variant=\"success\"\n                            name={`remove-${reservation.reservation_id}`}\n                            onClick={(e) =>\n                              handleUpdateReservationClick(e, reservation)\n                            }\n                          >\n                            Modify\n                          </Button>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  )\n              )}\n            </Row>\n          </Col>\n\n          <Col md={4} className=\"reviews-reservations-column\">\n            <div\n              className=\"d-flex flex-column\"\n              style={{ alignItems: \"flex-start\" }}\n            >\n              <Button\n                variant=\"success\"\n                onClick={() => handleProfileClick()}\n                name=\"otherProfiles\"\n                style={{\n                  fontSize: \"20px\",\n                  width: \"100%\",\n                  marginRight: \"5px\",\n                  marginTop: \"15px\",\n                  marginBottom: \"25px\",\n                }}\n              >\n                View other Profiles\n              </Button>\n            </div>\n            <h2>Reviews:</h2>\n            {reviews.length === 0 ? (\n              <p>This person has no reviews yet.</p>\n            ) : (\n              reviews.map((review, index) => (\n                <Card key={index} style={{ marginBottom: \"10px\" }}>\n                  <Card.Body>\n                    <Card.Title>{review[3]}</Card.Title>\n                    <Card.Text>Rating: {review[4]}</Card.Text>\n                    <Card.Text>{review[5]}</Card.Text>\n                    <Card.Text>By: {review[2]}</Card.Text>\n                  </Card.Body>\n                </Card>\n              ))\n            )}\n          </Col>\n        </Row>\n      </Container>\n      {/* Add a section to display reviews */}\n\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>{selectedEquipment?.name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>Status: {selectedEquipment?.status}</p>\n          <p>Description: {selectedEquipment?.description}</p>\n          <p>Price: ${selectedEquipment?.price}</p>\n          <p>Owner: {selectedEquipment?.owner}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            name=\"close\"\n            onClick={() => setShowModal(false)}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={showRemoveReservationModal} onHide={() => setShowRemoveReservationModal(false)}>\n        {/* Cancel reservation confirmation modal */}\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Cancallation</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {/* need to specify Body as Reservation does not have a name \n          -> otherwise it will throw an error that selectedReservation object can't be a react component */}\n          Are you sure you want to cancel {selectedReservation?.Body}?\n        </Modal.Body>\n        <Modal.Footer>\n          <Button name=\"remove2\" variant=\"danger\" onClick={handleRemoveReservationConfirm}>\n            Yes\n          </Button>\n          <Button\n            name=\"cancel\"\n            variant=\"secondary\"\n            onClick={() => setShowRemoveReservationModal(false)}\n          >\n            No\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={showUpdateReservationModal} onHide={() => setShowUpdateReservationModal(false)}>\n        {/* Update reservation modal */}\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Reservation</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleUpdateReservationSubmit}>\n            <Form.Group controlId=\"formName\">\n              <Form.Label>Start Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"start_date\"\n                value={updateReservationData.start_date}\n                onChange={(e) =>\n                  setUpdateReservationData({\n                    ...updateReservationData,\n                    start_date: e.target.value,\n                  })\n                }\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formDescription\">\n              <Form.Label>End Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"end_date\"\n                value={updateReservationData.end_date}\n                onChange={(e) =>\n                  setUpdateReservationData({\n                    ...updateReservationData,\n                    end_date: e.target.value,\n                  })\n                }\n              />\n            </Form.Group>\n            <Button variant=\"success\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n\n      <Modal\n        show={showAddItemModal}\n        id=\"updateModal\"\n        onHide={handleCloseAddItemModal}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add Item</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form className=\"contact-form\" onSubmit={handleAddItem}>\n            <FormGroup className=\"contact-page-form-group\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Name for Item\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleInputChange}\n                required\n              />\n            </FormGroup>\n            <FormGroup className=\"contact-page-form-group\">\n              <Form.Label>Condition</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Condition of Item\"\n                name=\"status\"\n                value={formData.status}\n                onChange={handleInputChange}\n                required\n              />\n            </FormGroup>\n            <FormGroup className=\"contact-page-form-group\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter Price for object\"\n                name=\"price\"\n                value={formData.price}\n                onChange={handleInputChange}\n                required\n              />\n            </FormGroup>\n            <FormGroup className=\"contact-page-form-group\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Description of Item\"\n                name=\"info\"\n                value={formData.info}\n                onChange={handleInputChange}\n                required\n              />\n            </FormGroup>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"success\"\n            type=\"submit\"\n            name=\"submitButtonUpdate\"\n            style={{\n              fontSize: \"20px\",\n              width: \"150px\",\n              marginLeft: \"15px\",\n              marginBottom: \"25px\",\n            }}\n            id=\"submitButtonUpdate\"\n            onClick={handleAddItem}\n          >\n            Submit\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={showRemoveModal} onHide={() => setShowRemoveModal(false)}>\n        {/* Remove confirmation modal */}\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm Removal</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to remove {selectedItem?.name}?\n        </Modal.Body>\n        <Modal.Footer>\n          <Button name=\"remove2\" variant=\"danger\" onClick={handleRemoveConfirm}>\n            Remove\n          </Button>\n          <Button\n            name=\"cancel\"\n            variant=\"secondary\"\n            onClick={() => setShowRemoveModal(false)}\n          >\n            Cancel\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={showUpdateModal} onHide={() => setShowUpdateModal(false)}>\n        {/* Update item modal */}\n        <Modal.Header closeButton>\n          <Modal.Title>Edit Item</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={handleUpdateSubmit}>\n            <Form.Group controlId=\"formName\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                value={updateFormData.name}\n                onChange={(e) =>\n                  setUpdateFormData({\n                    ...updateFormData,\n                    name: e.target.value,\n                  })\n                }\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formDescription\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                name=\"description\"\n                value={updateFormData.description}\n                onChange={(e) =>\n                  setUpdateFormData({\n                    ...updateFormData,\n                    description: e.target.value,\n                  })\n                }\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formStatus\">\n              <Form.Label>Status</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"status\"\n                value={updateFormData.status}\n                onChange={(e) =>\n                  setUpdateFormData({\n                    ...updateFormData,\n                    status: e.target.value,\n                  })\n                }\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formPrice\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                name=\"price\"\n                value={updateFormData.price}\n                onChange={(e) =>\n                  setUpdateFormData({\n                    ...updateFormData,\n                    price: e.target.value,\n                  })\n                }\n              />\n            </Form.Group>\n            <Button\n              variant=\"success\"\n              style={{ marginTop: \"5px\" }}\n              type=\"submit\"\n            >\n              Update\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default View;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { NavbarCustom } from \"../Components/Navbar\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { useUser } from \"../Components/UserContext\";\n\n// Ths infunction is used to displat the user data\nfunction UserDataList() {\n  const [userData, setUserData] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const { username } = useUser();\n  console.log(username);\n  \n//This function is used to fetch the user data when the component mounts \n  useEffect(() => {\n    fetchUserData();\n  }, []);\n\n// This function is used for making an API request to retrieve user data\n  const fetchUserData = () => {\n    fetch(\"https://gearonthego-52bc9f57a8cd.herokuapp.com/api/getUsers\")\n      .then((response) => response.json())\n      .then((data) => setUserData(data))\n      .catch((error) => console.error(\"Error:\", error));\n  };\n\n//This function sets the selected user in the selectedUser state\n  const handleCardClick = (user) => {\n    setSelectedUser(user);\n  };\n//This is the component that renders a list of all users\n  return (\n    <div>\n      <NavbarCustom />\n\n      <Container>\n        <Row>\n          {userData.map((user, index) => (\n            <Col key={index} xs={12} sm={6} md={4} lg={3}>\n              <Link to={`user/${user}`} style={{ textDecoration: \"none\" }}>\n                <Card\n                  onClick={() => handleCardClick(user)}\n                  name={`${user}`}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <Card.Body>\n                    <Card.Title>{user}</Card.Title>\n                  </Card.Body>\n                </Card>\n              </Link>\n            </Col>\n          ))}\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default UserDataList;\n","import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useUser } from \"./UserContext\";\n\n// ProtectedRoute is a component that ensures user authentication before rendering its children.\n// It provides a simple way to protect routes and restrict access to authenticated users.\nfunction ProtectedRoute({ children }) {\n  const { username } = useUser();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!username) {\n      // User is not logged in, navigate to the login page\n      navigate(\"/login\");\n    }\n  }, [username, navigate]);\n\n  return children;\n}\n\nexport default ProtectedRoute;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { NavbarCustom } from \"./Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { useUser } from \"./UserContext\";\nimport FormGroup from \"react-bootstrap/esm/FormGroup\";\n//This function is designed to handle user profiles, display equipment, and reviews. It uses various states to manage data and control the visibility of modals.\nfunction UserProfile() {\n  const { usernameSelected } = useParams();\n  const { username } = useUser();\n  const [equipmentData, setEquipmentData] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [showReviewModal, setShowReviewModal] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const navigate = useNavigate();\n\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [formReviewData, setFormReviewData] = useState({\n    title: \"\",\n    description: \"\",\n    rating: \"\",\n  });\n\n  // This useEffect is used When the 'usernameSelected' dependency changes, fetch equipment and reviews data.\n  useEffect(() => {\n    fetchEquipmentData();\n    fetchReviewsData();\n  }, [usernameSelected]);\n\n  // This function is used to Fetch equipment data from the server based on 'usernameSelected'.\n  const fetchEquipmentData = () => {\n    fetch(`https://127.0.0.1:8000/api/items/${usernameSelected}`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Fetched equipment data:\", data); // Debug statement\n        setEquipmentData(data);\n      })\n      .catch((error) => console.error(\"Error:\", error));\n  };\n  // This function is used to fetch reviews data from the server based on 'usernameSelected'.\n  const fetchReviewsData = () => {\n    fetch(`https://127.0.0.1:8000/api/getReviews/${usernameSelected}`)\n      .then((response) => response.json())\n      .then((data) => setReviews(data))\n      .catch((error) => console.error(\"Error:\", error));\n  };\n\n  const handleCardClick = (item) => {\n    setSelectedItem(item);\n    setShowModal(true);\n  };\n\n  //This function handles changes in input fields and update the form review data.\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormReviewData({ ...formReviewData, [name]: value });\n  };\n  //This function handles the submission of a review form.\n  const handleReviewSubmit = (event) => {\n    event.preventDefault();\n    const newReview = {\n      title: formReviewData.title,\n      description: formReviewData.description,\n      rating: parseInt(formReviewData.rating), // Convert to an integer\n      source: username,\n      target: usernameSelected,\n    };\n    // This fetch sends a POST request to add the review to the server.\n    fetch(\"https://127.0.0.1:8000/api/addReviews\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newReview),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        if (data.message === \"Review added successfully\") {\n          // Review was added successfully, fetch reviews data to update the UI\n          fetchReviewsData();\n        } else {\n          // Handle other responses or errors as needed\n        }\n      })\n      .catch((error) => console.error(\"Error:\", error));\n\n    setShowReviewModal(false);\n    setFormReviewData({\n      title: \"\",\n      description: \"\",\n      rating: \"\",\n    });\n  };\n  const handleProfileClick = () => {\n    navigate(\"/AllProfile\");\n  };\n  console.log(\"selected\" + usernameSelected);\n  console.log(\"current\" + username);\n  if (username === usernameSelected) {\n    navigate(\"/View\");\n  }\n\n  const handleReserveClick = () => {\n    console.log(selectedItem);\n    navigate(\"/reservations\", { state: { selectedItem: selectedItem } });\n  };\n\n  // The return represents a user profile page that displays equipment hosted by a selected user,\n  // user reviews, and provides the ability to write reviews for the displayed equipment.\n  return (\n    <div>\n      <NavbarCustom />\n      <div\n        style={{\n          marginLeft: \"10px\",\n          marginRight: \"10px\",\n        }}\n      >\n        <Row>\n          <Col md={8}>\n            <h2\n              style={{\n                marginLeft: \"15px\",\n                marginTop: \"20px\",\n              }}\n            >\n              {usernameSelected}\n            </h2>\n          </Col>\n          <Col md={4} className=\"text-right\">\n            <Button\n              variant=\"secondary\"\n              onClick={() => handleProfileClick()}\n              style={{\n                fontSize: \"20px\",\n                width: \"100%\",\n                marginRight: \"10px\",\n                marginTop: \"15px\",\n                marginBottom: \"25px\",\n              }}\n            >\n              View other Profiles\n            </Button>\n          </Col>\n        </Row>\n        <Container fluid>\n          <Row>\n            <Col md={8} className=\"items-hosted-column\">\n              <h3>Available Items</h3>\n              <Row>\n                {equipmentData &&\n                equipmentData.items &&\n                equipmentData.items.length > 0 ? (\n                  equipmentData.items\n                    .filter(\n                      (item) =>\n                        item.owner === usernameSelected && item.available\n                    )\n                    .map((item) => (\n                      <Col key={item.id} className=\"col-md-4 col-12\">\n                        <Card\n                          className=\"custom-card\"\n                          onClick={() => handleCardClick(item)}\n                          style={{ cursor: \"pointer\" }}\n                        >\n                          <Card.Body>\n                            <Card.Title>{item.name}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">\n                              Status: {item.status}\n                            </Card.Subtitle>\n                            <Card.Text>{item.description}</Card.Text>\n                            <Card.Text>Price: ${item.price}</Card.Text>\n                            <Card.Text>Owner: {item.owner}</Card.Text>\n                          </Card.Body>\n                        </Card>\n                      </Col>\n                    ))\n                ) : (\n                  <p>\n                    {usernameSelected} has no available equipment items hosted.\n                  </p>\n                )}\n              </Row>\n\n              <h3>Unavailable Items</h3>\n              <Row>\n                {equipmentData &&\n                equipmentData.items &&\n                equipmentData.items.length > 0 ? (\n                  equipmentData.items\n                    .filter(\n                      (item) =>\n                        item.owner === usernameSelected && !item.available\n                    )\n                    .map((item) => (\n                      <Col key={item.id} className=\"col-md-4 col-12\">\n                        <Card\n                          className=\"custom-card\"\n                          onClick={() => handleCardClick(item)}\n                          style={{ cursor: \"pointer\" }}\n                        >\n                          <Card.Body>\n                            <Card.Title>{item.name}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">\n                              Status: {item.status}\n                            </Card.Subtitle>\n                            <Card.Text>{item.description}</Card.Text>\n                            <Card.Text>Price: ${item.price}</Card.Text>\n                            <Card.Text>Owner: {item.owner}</Card.Text>\n                          </Card.Body>\n                        </Card>\n                      </Col>\n                    ))\n                ) : (\n                  <p>\n                    {usernameSelected} has no unavailable equipment items\n                    hosted.\n                  </p>\n                )}\n              </Row>\n            </Col>\n            <Col md={4} className=\"reviews-reservations-column\">\n              <Row>\n                <Col md={6}>\n                  <h3>Reviews</h3>\n                </Col>\n                <Col md={6} className=\"text-right\">\n                  <Button\n                    style={{ width: \"100%\" }}\n                    variant=\"success\"\n                    name=\"review\"\n                    onClick={() => setShowReviewModal(true)}\n                  >\n                    Write Review\n                  </Button>\n                </Col>\n              </Row>\n              {reviews.length === 0 ? (\n                <p>This person has no reviews yet.</p>\n              ) : (\n                reviews.map((review, index) => (\n                  <Card key={index} style={{ marginBottom: \"10px\" }}>\n                    <Card.Body>\n                      <Card.Title>{review[3]}</Card.Title>\n                      <Card.Text>Rating: {review[4]}</Card.Text>\n                      <Card.Text>{review[5]}</Card.Text>\n                      <Card.Text>By: {review[2]}</Card.Text>\n                    </Card.Body>\n                  </Card>\n                ))\n              )}\n            </Col>\n          </Row>\n        </Container>\n        {/* Modal for displaying details */}\n        <Modal show={showModal} onHide={() => setShowModal(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>{selectedItem?.name}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <p>\n              Status: {selectedItem?.available ? \"Available\" : \"Unavailable\"}\n            </p>\n            <p>Description: {selectedItem?.description}</p>\n            <p>Price: {selectedItem?.price}</p>\n            <p>Owner: {selectedItem?.owner}</p>\n          </Modal.Body>\n          <Modal.Footer>\n            {selectedItem?.available && (\n              <Button variant=\"success\" onClick={handleReserveClick}>\n                Reserve\n              </Button>\n            )}\n            <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        {/* Add a \"Write Review\" Button */}\n        <Modal show={showReviewModal} onHide={() => setShowReviewModal(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Write a Review</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form onSubmit={handleReviewSubmit}>\n              <FormGroup className=\"contact-page-form-group\">\n                <Form.Label className=\"form-label\">Title</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  name=\"title\"\n                  value={formReviewData.title}\n                  onChange={handleInputChange}\n                  required\n                />\n              </FormGroup>\n              <FormGroup className=\"contact-page-form-group\">\n                <Form.Label className=\"form-label\">Rating</Form.Label>\n                <Form.Control\n                  as=\"select\" // Use a <select> element for the dropdown\n                  name=\"rating\"\n                  value={formReviewData.rating}\n                  onChange={handleInputChange}\n                  required\n                >\n                  <option value=\"\">Select Rating</option>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5</option>\n                </Form.Control>\n              </FormGroup>\n              <Form.Group controlId=\"formReviewText\">\n                <Form.Label>Review Text</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={4}\n                  name=\"description\"\n                  value={formReviewData.description}\n                  onChange={handleInputChange}\n                  required\n                />\n              </Form.Group>\n\n              <Button\n                variant=\"success\"\n                type=\"submit\"\n                name=\"submitReview\"\n                style={{ marginTop: \"5px\" }}\n              >\n                Submit Review\n              </Button>\n            </Form>\n          </Modal.Body>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n\nexport default UserProfile;\n","import React from \"react\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\nimport Index from \"./pages\";\nimport Contact from \"./pages/contact\";\n\nimport Checkout from \"./pages/payment_validation\";\nimport PaymentSuccessful from \"./pages/payment_successful\";\n\nimport { useUser } from \"./Components/UserContext\";\n\nimport ItemSearchAndFilter from \"./pages/search\";\nimport Info from \"./pages/info\";\nimport Reservations from \"./pages/MakeReservation\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport View from \"./pages/ViewItem\";\nimport Profile from \"./pages/profile\";\nimport ProtectedRoute from \"./Components/ProtectedRoute\";\nimport UserProfile from \"./Components/UserProfile\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<Index />}>\n          <Route path=\"\" element={<ItemSearchAndFilter />} />\n          <Route path=\"contact\" element={<Contact />} />\n          <Route path=\"PaymentSuccessful\" element={<PaymentSuccessful />} />\n\n          <Route\n            path=\"Checkout\"\n            element={\n              <ProtectedRoute>\n                <Checkout />\n              </ProtectedRoute>\n            }\n          />\n\n          <Route\n            path=\"View\"\n            element={\n              <ProtectedRoute>\n                <View />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"reservations\"\n            element={\n              <ProtectedRoute>\n                <Reservations />\n              </ProtectedRoute>\n            }\n          />\n\n          <Route\n            path=\"AllProfile\"\n            element={\n              <ProtectedRoute>\n                <Profile />\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"AllProfile/user/:usernameSelected\"\n            element={\n              <ProtectedRoute>\n                <UserProfile />\n              </ProtectedRoute>\n            }\n          />\n\n          <Route path=\"register\" element={<RegisterPage />} />\n          <Route path=\"login\" element={<LoginPage />} />\n          <Route path=\"info\" element={<Info />} />\n        </Route>\n      </Routes>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { UserProvider } from \"./Components/UserContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}